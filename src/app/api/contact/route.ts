export const runtime='nodejs';import{NextRequest,NextResponse}from'next/server';const BACKEND=process.env.NEXT_PUBLIC_BACKEND_URL||'https://crset-api-production.up.railway.app';const NOTION_KEY=process.env.NOTION_API_KEY;const NOTION_DB=process.env.NOTION_DATABASE_ID;const NOTION_VER='2022-06-28';const WINDOW_MS=5*60*1000,MAX_REQ=5,bucket=new Map<string,number[]>();function allowed(ip:string){const now=Date.now();const arr=(bucket.get(ip)||[]).filter(ts=>now-ts<WINDOW_MS);if(arr.length>=MAX_REQ)return false;arr.push(now);bucket.set(ip,arr);return true}async function notionCreate(payload:any,ip:string){try{if(!NOTION_KEY||!NOTION_DB)return{skipped:true,reason:'no_env'};const headers={Authorization:`Bearer ${NOTION_KEY}`,'Notion-Version':NOTION_VER,'Content-Type':'application/json'} as any;const dbr=await fetch(`https://api.notion.com/v1/databases/${NOTION_DB}`,{headers});if(!dbr.ok)return{skipped:true,reason:`db_${dbr.status}`};const db=await dbr.json();const props=(db as any).properties||{};const has=(k:string)=>Boolean(props[k]);const titleKey=has('Nome')?'Nome':(has('Name')?'Name':null);const p:any={};if(titleKey)p[titleKey]={title:[{type:'text',text:{content:String(payload?.name||'Lead')}}]};if(has('Email'))p['Email']={email:String(payload?.email||'')};const utmVal=String(payload?.utm||payload?.utm_source||'');if(has('Origem/UTM'))p['Origem/UTM']={rich_text:[{type:'text',text:{content:utmVal}}]};if(has('UTM'))p['UTM']={rich_text:[{type:'text',text:{content:utmVal}}]};if(has('Source'))p['Source']={rich_text:[{type:'text',text:{content:utmVal}}]};if(has('Score'))p['Score']={number:typeof payload?.score==='number'?payload.score:0};if(has('IP'))p['IP']={rich_text:[{type:'text',text:{content:ip||''}}]};if(has('Data/Hora'))p['Data/Hora']={date:{start:new Date().toISOString()}};if(has('Mensagem')&&payload?.message)p['Mensagem']={rich_text:[{type:'text',text:{content:String(payload.message)}}]};if(has('Empresa')&&payload?.company)p['Empresa']={rich_text:[{type:'text',text:{content:String(payload.company)}}]};if(has('Telefone')&&payload?.phone)p['Telefone']={phone_number:String(payload.phone)};const body={parent:{database_id:NOTION_DB},properties:p};const cr=await fetch('https://api.notion.com/v1/pages',{method:'POST',headers,body:JSON.stringify(body)});if(!cr.ok){const t=await cr.text().catch(()=>'' );return{ok:false,status:cr.status,detail:t}}return{ok:true}}catch(e:any){return{ok:false,detail:String(e?.message||e)}}}export async function POST(req:NextRequest){const ip=(req.headers.get('x-forwarded-for')||'').split(',')[0]?.trim()||'unknown';if(!allowed(ip))return NextResponse.json({ok:false,error:'rate_limited'},{status:429});const payload=await req.json().catch(()=>({}));if((payload as any)?.website||(payload as any)?.url||(payload as any)?.hp)return NextResponse.json({ok:true,ignored:true},{status:204});try{const r=await fetch(`${BACKEND}/api/contact`,{method:'POST',headers:{'content-type':'application/json','x-forwarded-for':ip},body:JSON.stringify(payload)});const data=await r.json().catch(()=>({}));const ok=r.status===200&&((data as any)?.sent===true||(data as any)?.ok===true);if(ok){notionCreate(payload,ip).catch(()=>{});}return NextResponse.json({...data,notion:ok?true:false},{status:ok?201:(r.status||500)})}catch{return NextResponse.json({ok:false,error:'proxy_failed'},{status:502})}}export async function GET(){return NextResponse.json({status:'ok'})}
